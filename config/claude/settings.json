{
  "keybindings": {
    "interrupt": "ctrl+c"
  },
  "hooks": {
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "~/dotfiles/config/claude/notify.sh"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "~/dotfiles/config/claude/notify.sh"
          }
        ]
      }
    ]
  },
  "model": "sonnet",
  "enableAllProjectMcpServers": true,
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Read(**)",
      "Edit(**)",
      "MultiEdit(**)",
      "Write(**)",
      "Glob(**)",
      "Grep(**)",
      "LS(**)",

      "Bash(git status*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull*)",
      "Bash(git fetch*)",
      "Bash(git log*)",
      "Bash(git diff*)",
      "Bash(git checkout *)",
      "Bash(git branch*)",
      "Bash(git merge *)",
      "Bash(git stash*)",
      "Bash(git remote *)",
      "Bash(git config *)",
      "Bash(git show *)",
      "Bash(git blame *)",
      "Bash(git clone *)",
      "Bash(git restore:*)",

      "Bash(npm:*)",
      "Bash(npm run:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npm run typecheck:*)",
      "Bash(npm test:*)",
      "Bash(npx:*)",
      "Bash(node:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(bun:*)",

      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pip:*)",
      "Bash(pip3:*)",
      "Bash(uv:*)",
      "Bash(uv sync:*)",
      "Bash(uv pip install:*)",
      "Bash(uv run:*)",
      "Bash(uv add:*)",
      "Bash(python test:*)",

      "Bash(ls*)",
      "Bash(cat:*)",
      "Bash(head *)",
      "Bash(tail *)",
      "Bash(grep:*)",
      "Bash(find *)",
      "Bash(echo *)",
      "Bash(pwd*)",
      "Bash(which *)",
      "Bash(whoami*)",
      "Bash(date*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(source .env)",

      "Bash(docker ps*)",
      "Bash(docker logs *)",
      "Bash(docker inspect *)",
      "Bash(docker images*)",
      "Bash(docker compose up*)",
      "Bash(docker compose down*)",
      "Bash(docker compose logs*)",
      "Bash(docker compose ps*)",
      "Bash(docker build *)",

      "WebFetch(**)",
      "WebSearch",

      "Bash(npx playwright:*)",

      "Bash(make *)",
      "Bash(cargo *)",
      "Bash(go *)",

      "Bash(cp *)",
      "Bash(mv *)",
      "Bash(mkdir *)",
      "Bash(touch *)",

      "Bash(tar *)",
      "Bash(zip *)",
      "Bash(unzip *)",

      "Bash(jq *)",
      "Bash(sed *)",
      "Bash(awk *)",
      "Bash(sort *)",
      "Bash(uniq *)",
      "Bash(wc *)"
    ],

    "deny": [
      "Bash(rm -rf /*)",
      "Bash(sudo rm -rf /*)",
      "Bash(rm -rf /)",
      "Bash(sudo rm -rf /)",

      "Bash(shutdown*)",
      "Bash(reboot*)",
      "Bash(halt*)",
      "Bash(poweroff*)",

      "Bash(docker run --privileged *)",
      "Bash(docker run --pid=host *)",
      "Bash(docker run -v /:/host *)",

      "Bash(sudo passwd*)",
      "Bash(sudo useradd*)",
      "Bash(sudo userdel*)",

      "Bash(sudo ufw disable*)",
      "Bash(sudo iptables -F*)",

      "Bash(sudo rm /etc/*)",
      "Bash(sudo > /etc/*)",

      "Bash(curl * | sh*)",
      "Bash(curl * | bash*)",
      "Bash(wget * | sh*)",
      "Bash(wget * | bash*)",

      "Bash(git push --force origin master*)",
      "Bash(git push --force origin main*)",
      "Bash(git push -f origin master*)",
      "Bash(git push -f origin main*)",

      "Bash(cat ~/.aws/*)",
      "Bash(cat ~/.ssh/id_*)",
      "Read(.env*)",
      "Read(*/secrets/*)",
      "Read(*secret*)",
      "Read(*password*)"
    ],

    "defaultMode": "acceptEdits"
  }
}
